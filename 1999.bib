@comment{{This file has been generated by bib2bib 1.96}}

@comment{{Command line: bib2bib -ob 1999.bib -c year=1999 csdl-trs.bib}}

@techreport{csdl-98-02,
  author = {Carleton A. Moore},
  institution = {Department of Information and Computer Sciences,
		  University of Hawaii, Honolulu, Hawaii 96822},
  number = {{CSDL}-98-02},
  title = {Automated Support for Technical Skill Acquisition and Improvement: An
Evaluation of the Leap Toolkit},
  keywords = {Leap, Thesis-Proposals},
  type = {{Ph.D.} Thesis Proposal},
  month = {November},
  year = 1999,
  url = {http://csdl.ics.hawaii.edu/techreports/1998/98-02/98-02.pdf},
  abstract = {

  Software developers work too hard and yet do not get enough done.  Developing
  high quality software efficiently and consistently is a very difficult
  problem.  Developers and managers have tried many different solutions to
  address this problem.  Recently their focus has shifted from the software
  organization to the individual software developer.  The Personal Software
  Process incorporates many of the previous solutions while focusing on the
  individual software developer.

  I combined ideas from prior research on the Personal Software Process, Formal
  Technical Review and my experiences building automated support for software
  engineering activities to produce the Leap toolkit.  The Leap toolkit is
  intended to help individuals in their efforts to improve their development
  capabilities.  Since it is a light-weight, flexible, powerful, and private
  tool, it allows individual developers to gain valuable insight into their own
  development process. The Leap toolkit also addresses many measurement and
  data issues involved with recording any software development process.

  The main thesis of this work is the Leap toolkit provides a more accurate and
  effective way for developers to collect and analyze their software
  engineering data than manual methods.  To evaluate this thesis I will
  investigate three claims: (1) the Leap toolkit prevents many important errors
  in data collection and analysis; (2) the Leap toolkit supports data
  collection and analyses that are not amenable to manual enactment; and (3)
  the Leap toolkit reduces the level of ``collection stage'' errors.  To
  evaluate the first claim, I will show how the design of the Leap toolkit
  effectively prevents important classes of errors shown to occur in prior
  related research. To evaluate the second claim, I will conduct an experiment
  investigating 14 different quantitative time estimation techniques based upon
  historical size data to show that the Leap toolkit is capable of complex
  analyses not possible in manual methods.  To evaluate the third claim, I will
  analyze software developers data and conduct surveys to investigate the level
  of data collection errors.

 }
}

@inproceedings{csdl-98-12,
  author = {Carleton A. Moore},
  title = {Project LEAP: Personal Process Improvement for the Differently Disciplined},
  booktitle = {Proceedings of the Doctoral Workshop from the
1999 International Conference on Software Engineering},
  keywords = {Leap, Publications-Workshops},
  year = {1999},
  address = {Los Angeles, CA.},
  month = {May},
  url = {http://csdl.ics.hawaii.edu/techreports/1998/98-12/98-12.pdf},
  abstract = {
This paper overviews the research motivations for Project Leap.
}
}

@article{csdl-98-13,
  keywords = {PSP, Publications-Journals},
  author = {Philip M. Johnson and Anne M. Disney},
  title = {A Critical Analysis of {PSP} Data Quality: Results from a Case Study},
  journal = {Journal of Empirical Software Engineering},
  year = {1999},
  month = {December},
  url = {http://csdl.ics.hawaii.edu/techreports/1998/98-13/98-13.pdf},
  abstract = {
  The Personal Software Process (PSP) is used by software engineers to
  gather and analyze data about their work.  Published studies typically
  use data collected using the PSP to draw quantitative conclusions about
  its impact upon programmer behavior and product quality.  However, our
  experience using PSP led us to question the quality of data both during
  collection and its later analysis.  We hypothesized that data quality
  problems can make a significant impact upon the value of PSP
  measures---significant enough to lead to incorrect conclusions regarding
  process improvement.  To test this hypothesis, we built a tool to
  automate the PSP and then examined 89 projects completed by ten subjects
  using the PSP manually in an educational setting.  We discovered 1539
  primary errors and categorized them by type, subtype, severity, and age.
  To examine the collection problem we looked at the 90 errors that
  represented impossible combinations of data and at other less concrete
  anomalies in Time Recording Logs and Defect Recording Logs.  To examine
  the analysis problem we developed a rule set, corrected the errors as far
  as possible, and compared the original and corrected data.  We found
  significant differences for measures such as yield and the
  cost-performance ratio, confirming our hypothesis.  Our results raise
  questions about the accuracy of manually collected and analyzed PSP data,
  indicate that integrated tool support may be required for high quality
  PSP data analysis, and suggest that external measures should be used when
  attempting to evaluate the impact of the PSP upon programmer behavior and
  product quality.
}
}

@techreport{csdl-99-01,
  keywords = {Leap},
  author = {Philip M. Johnson},
  institution = {Department of Information and Computer Sciences,
		  University of Hawaii, Honolulu, Hawaii 96822},
  title = {Reflective Software Engineering with the Leap Toolkit},
  year = {1999},
  url = {http://csdl.ics.hawaii.edu/techreports/1999/99-01/},
  number = {{{CSDL}-99-01}},
  month = {January},
  abstract = {
  This document describes a empirical, experience-based approach to
  software engineering at the individual level using the Leap toolkit.
		  }
}

@techreport{csdl-99-02,
  keywords = {LOCC},
  author = {Joseph A. Dane},
  institution = {Department of Information and Computer Sciences,
		  University of Hawaii, Honolulu, Hawaii 96822},
  title = {LOCC User Guide},
  year = {1999},
  url = {http://csdl.ics.hawaii.edu/techreports/1999/99-02/99-02.html},
  number = {{{CSDL}-99-02}},
  month = {January},
  abstract = {
  This document describes the installation and use of LOCC.
LOCC is a general mechanism for producing one or more measurements of the
size of work products.  LOCC
can produce both the "total" size of a work product, as well as the
"difference" in size between successive versions of the same work product.
		  }
}

@techreport{csdl-99-04,
  keywords = {JavaWizard},
  author = {Jennifer M. Geis},
  institution = {Department of Information and Computer Sciences,
		  University of Hawaii, Honolulu, Hawaii 96822},
  title = {A Case Study Of Defect Detection And Analysis With JWiz},
  year = {1999},
  url = {http://csdl.ics.hawaii.edu/techreports/1999/99-04/99-04.pdf},
  number = {{{CSDL}-99-04}},
  month = {November},
  abstract = {
This paper presents a study designed to investigate the occurrence of certain kinds of errors in Java programs using JavaWizard (JWiz), a static analysis mechanism for Java source code. JWiz is a tool that supports detection of certain commonly occurring semantic errors in Java programs.

JWiz was used within a research framework designed to reveal (1) knowledge about the kinds of errors made by Java programmers, (2) differences among Java programmers in the kinds of errors made, and (3) potential avenues for improvement in the design and/or implementation of the Java language or environment.

We found that all programmers inject a few of the same mistakes into their code, but these are only minor, non-defect causing errors. We also found that the types of defects injected vary drastically with no correlation to program size or developer experience.

Finally, we found that for those developers who make some of the mistakes that JWiz is designed for, JWiz can be a great help, saving significant amounts of time ordinarily spent tracking down defects in test.

		  }
}

@techreport{csdl-99-05,
  keywords = {MCS, Grant},
  author = {Robert S. Brewer},
  institution = {Department of Information and Computer Sciences,
		  University of Hawaii, Honolulu, Hawaii 96822},
  title = {Aspect Technology Fund Grant Proposal: Condensation of Educational Mailing Lists},
  year = {1999},
  type = {Grant Application},
  url = {http://csdl.ics.hawaii.edu/techreports/1999/99-05/99-05.pdf},
  number = {{{CSDL}-99-05}},
  month = {February},
  abstract = {
  I propose the extension of the Mailinglist Condensation System to the realm
  of class support mailing lists in education. Condensed archives of the
  mailing lists can be used by future students to learn from the students of
  previous semesters, instead of having the information thrown out at the end
  of each semester. I will pursue this by piloting the system on two classes in
  Fall 1999. Furthermore, I show the feasibility of creating a company based on
  the {\em open source} model which will sell service and support for MCS.
  }
}

@techreport{csdl-99-06,
  keywords = {Leap, Grant},
  author = {Carleton A. Moore},
  institution = {Department of Information and Computer Sciences,
		  University of Hawaii, Honolulu, Hawaii 96822},
  title = {The Aspect Technology Fund Grant Proposal:
Business Plan Improvement using Software Engineering Principles},
  year = {1999},
  type = {Grant Application},
  url = {http://csdl.ics.hawaii.edu/techreports/1999/99-06/99-06.pdf},
  number = {{{CSDL}-99-06}},
  month = {February},
  abstract = {This proposal describes the motivation, organization,
		  and potential products and services for a company that
		  supports the creation of high quality business plans.}
}

@inproceedings{csdl-99-07,
  author = {Carleton A. Moore},
  title = {Project {LEAP}: Addressing Measurement Dysfunction in Review},
  booktitle = {Proceedings of the Eighth International Conference on
		  Human-Computer Interaction},
  keywords = {Leap, FTR, Publications-Conferences},
  year = {1999},
  address = {Munich, Germany},
  month = {August},
  url = {http://csdl.ics.hawaii.edu/techreports/1999/99-07/99-07.pdf},
  abstract = {
The software industry and academia believe that software review,
specifically Formal Technical Review (FTR), is a powerful method for
improving the quality of software.
Computer support for FTR reduces the overhead of conducting
reviews for reviewers and managers.
Computer support of FTR also allow for the easy collection of empirical
measurement of process and products of software review.  These measurements
allow researchers or reviewers to gain valuable insights into the review
process.
After looking closely at review metrics, we became aware of the possibility
of measurement dysfunction in formal technical review.  Measurement
dysfunction is a situation in which the act of measurement affects the
organization in a counter-productive fashion, which leads to results
directly counter to those intended by the organization for the measurement.
How can we reduce the threat of measurement dysfunction in software review
without losing the benefits of metrics collection?  Project
LEAP is our attempt
at to answer this question.  This paper present Project Leap's
approach to the design, implementation,
and evaluation of tools and methods for empirically-based, individualized
software developer improvement.
  }
}

@inproceedings{csdl-99-08,
  author = {Philip M. Johnson},
  title = {Leap: A ``Personal Information Environment'' for Software Engineers},
  booktitle = {Proceedings of the 1999 International Conference on
		  Software Engineering},
  keywords = {Leap, Publications-Conferences},
  year = {1999},
  address = {Los Angeles, CA.},
  month = {May},
  url = {http://csdl.ics.hawaii.edu/techreports/1999/99-08/99-08.pdf},
  abstract = {  The Leap toolkit is designed to provide Lightweight, Empirical,
Anti-measurement dysfunction, and Portable approaches to
software developer improvement. Using Leap, software engineers gather and
analyze personal data concerning time, size, defects, patterns, and
checklists. They create and maintain definitions describing their software
development procedures, work products, and project attributes, including
document types, defect types, severities, phases, and size definitions.
Leap also supports asynchronous software review and facilitates integration
of this group-based data with individually collected data.  The Leap
toolkit provides a ``reference model'' for a personal information
environment to support skill acquisition and improvement for software
engineers.}
}

@techreport{csdl-99-09,
  keywords = {Grant},
  author = {Joseph A. Dane},
  institution = {Department of Information and Computer Sciences,
		  University of Hawaii, Honolulu, Hawaii 96822},
  title = {A Proposal for an Oahu Internet Ocean Sports Resource},
  year = {1999},
  url = {http://csdl.ics.hawaii.edu/techreports/1999/99-09/grant.pdf},
  number = {{{CSDL}-99-09}},
  month = {February},
  abstract = {This document proposes the development of a geographic
		  information system available over the Internet to help
		  visitors to Hawaii become aware of Ocean sports opportunities.}
}

@mastersthesis{csdl-99-10,
  type = {{M.S.} Thesis},
  number = {{CSDL}-99-10},
  keywords = {LOCC, Thesis-MS},
  author = {Joseph A. Dane},
  title = {Modular Program Size Counting},
  school = {University of Hawaii},
  year = {1999},
  month = {December},
  url = {http://csdl.ics.hawaii.edu/techreports/1999/99-10/99-10.pdf},
  abstract = {

  Effective program size measurement is difficult to accomplish.  Factors
  such as program implementation language, programmer experience and
  application domain influence the effectiveness of particular size metrics
  to such a degree that it is unlikely that any single size metric will be
  appropriate for all applications. This thesis introduces a tool, LOCC,
  which provides a generic architecture and interface to the production and
  use of different size metrics.  Developers can use the size metrics
  distributed with LOCC or can design their own metrics, which can be
  easily incorporated into LOCC.  LOCC pays particular attention to the
  problem of supporting incremental development, where a work product is
  not created all at once but rather through a sequence of small changes
  applied to previously developed programs.  LOCC requires that developers
  of new size metrics support this approach by providing a means of
  comparing two versions of a program.  LOCC's effectiveness was evaluated
  by using it to count over 50,000 lines of Java code, by soliciting
  responses to a questionnaire sent to users, and by personal reflection on
  the process of using and extending it.  The evaluation revealed that
  users of LOCC found that it assisted them in their development process,
  although there were some improvements which could be made.


}
}

@techreport{csdl-99-11,
  keywords = {Grant},
  author = {Philip M. Johnson},
  institution = {Department of Information and Computer Sciences,
		  University of Hawaii, Honolulu, Hawaii 96822},
  title = {Java-based software engineering technology
                   for high quality development in "Internet Time"
                   organizations},
  year = {1999},
  url = {http://csdl.ics.hawaii.edu/techreports/1999/99-11/Welcome.html},
  number = {{{CSDL}-99-11}},
  month = {February},
  abstract = {
This grant will support deployment and evaluation of four software
engineering technologies to support high quality development in "Internet
Time" environments.  The Leap toolset supports technical skill acquisition.
MCS supports improves the capability of mailing lists to provide technical
support. OpenJavaDoc facilitates open source distribution and software
development. The JavaWizard Internet Trial provides community-wide
statistics on Java programming errors.  The research projects will be
structured to allow Sun developers with early access to the systems, to
provide tangible software engineering benefits to Sun development groups,
and to enable Sun developers to provide feedback that can influence future
development.}
}

@techreport{csdl-99-12,
  keywords = {Leap},
  author = {Carleton A. Moore},
  institution = {Department of Information and Computer Sciences,
		  University of Hawaii, Honolulu, Hawaii 96822},
  title = {Teaching Software Engineering skills with the Leap Toolkit},
  year = {1999},
  url = {http://csdl.ics.hawaii.edu/techreports/1999/99-12/99-12.pdf},
  number = {{{CSDL}-99-12}},
  month = {November},
  abstract = {
The Personal Software Process (PSP) teaches software developers many valuable
software engineering techniques.  Developers learn how to develop high quality
software efficiently and how to accurately estimate the amount of effort it will
take. To accomplish this the PSP forces the developer to follow a very strict
development model, to manually record time, to defect and size data, and analyze
their data.  The PSP appears successful at improving developer performance during
the training, yet there are questions concerning long-term adoption rates and
the accuracy of PSP data.

This paper presents our experiences using the Leap toolkit, an automated tool
to support personal developer improvement.  The Leap toolkit incorporates ideas
from the PSP and group review.  It relaxes some of the constraints in the PSP
and reduces process overhead.  We are using the Leap toolkit in an advanced
software engineering course at the University of Hawaii, Manoa.
}
}

@article{csdl-99-14,
  author = {Philip M. Johnson},
  title = {Project LEAP:
     Lightweight, Empirical, Anti-measurement dysfunction, and Portable
     Software Developer Improvement},
  journal = {{ACM} Software Engineering Notes},
  year = {1999},
  volume = {24},
  number = {6},
  url = {http://csdl.ics.hawaii.edu/techreports/1999/99-14/99-14.pdf},
  month = {December},
  keywords = {Leap, Publications-Periodicals},
  abstract = {
Project LEAP investigates the use of lightweight, empirical,
anti-measurement dysfunction, and portable approaches to software developer
improvement. This document provides a one-page progress report on
Project Leap for inclusion in the "Millenium" issue of Software
Engineering Notes.

}
}

@techreport{csdl2-00-12,
  keywords = {PWP},
  author = {Philip M. Johnson and Audris Mockus and Larry Votta},
  institution = {Waterslide Engineering Institute, Oulu, Finland},
  title = {A controlled experimental study of the Personal Waterslide
Process: Results and Interpretations},
  year = {1999},
  url = {http://csdl.ics.hawaii.edu/techreports/2000/00-12/pwp.pdf},
  number = {{{CSDL}-00-12}},
  month = {June},
  summary = {The paper reports on the Personal Waterslide Process,
an innovative software engineering technique pioneered during the 1999
meeting of the International Software Engineering Research Network at
its annual meeting in Oulu, Finland.
}
}

@comment{{csdl2-08-06,
  author = 	 Robert S. Brewer,
  title = 	 Literature review on carbon footprint collection and analysis ,
  institution =  "Department of Information and Computer Sciences,
		  University of Hawaii, Honolulu, Hawaii 96822",
  NUMBER = CSDL-08-06,
  KEYWORDS = Sustainability,
  MONTH = December,
  YEAR = 2008,
  URL = http://csdl.ics.hawaii.edu/techreports/2008/08-06/08-06.pdf,
  abstract = Obsolete. Please see by Technical Report 09-05.

}}

